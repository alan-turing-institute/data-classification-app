version: "3.3"

services:
  db:
    image: postgres:10
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_DB=haven
      - POSTGRES_USER=haven
      - POSTGRES_PASSWORD=haven
      - POSTGRESQL_TLS_CERT_FILE=/etc/letsencrypt/live/dca.uksouth.cloudapp.azure.com/fullchain.pem
      - POSTGRESQL_TLS_KEY_FILE=/etc/letsencrypt/live/dca.uksouth.cloudapp.azure.com/privkey.pem;
    

  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: sh -c "python manage.py makemigrations &&
                    python manage.py migrate easyaudit &&
                    python manage.py migrate &&
                    python manage.py collectstatic --no-input --clear &&
                    gunicorn haven.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - static_volume:/app/staticfiles
    ports:
      - "8000:8000"
    env_file:
      - ./.env.prod
    #restart: "on-failure"
    depends_on:
      - db


  nginx:
    build: ./nginx
    ports:
      - "80:80"
      - "443:443"
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    volumes:
      - static_volume:/app/staticfiles
      - ./nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - web
      - db
    restart: always

  certbot:
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot

volumes:
  postgres_data:
  static_volume:
