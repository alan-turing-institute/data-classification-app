# Generated by Django 2.1 on 2019-07-29 14:09

from django.db import migrations, models

from data import classification
from data.tiers import Tier


def prepare_questions(apps, schema_editor):
    classification.insert_blank_question_if_necessary(apps, 'financial_low_personal')
    classification.insert_blank_question_if_necessary(apps, 'include_commercial_personal')
    classification.insert_blank_question_if_necessary(apps, 'no_reidentify')

    classification.hide_question_if_present(apps, 'closed_identify_living')
    classification.hide_question_if_present(apps, 'open_identify_living')


def rollback_questions(apps, schema_editor):
    ClassificationQuestion = apps.get_model('data', 'ClassificationQuestion')
    ClassificationQuestion.objects.get(name='financial_low_personal').delete()
    ClassificationQuestion.objects.get(name='include_commercial_personal').delete()
    ClassificationQuestion.objects.get(name='no_reidentify').delete()

    q = ClassificationQuestion.objects.get(name='closed_identify_living')
    q.hidden = False
    q.save()
    q = ClassificationQuestion.objects.get(name='open_identify_living')
    q.hidden = False
    q.save()

def migrate_questions(apps, schema_editor):
    questions = { q['name']: q for q in classification.initial_questions() }
    classification.migrate_question(apps, 'closed_personal', questions['closed_personal'])
    classification.migrate_question(apps, 'financial_low', questions['financial_low'])
    classification.migrate_question(apps, 'financial_low_personal', questions['financial_low_personal'])
    classification.migrate_question(apps, 'include_commercial', questions['include_commercial'])
    classification.migrate_question(apps, 'include_commercial_personal', questions['include_commercial_personal'])
    classification.migrate_question(apps, 'no_reidentify', questions['no_reidentify'])
    classification.migrate_question(apps, 'no_reidentify_absolute', questions['no_reidentify_absolute'])
    classification.migrate_question(apps, 'no_reidentify_strong', questions['no_reidentify_strong'])
    classification.migrate_question(apps, 'open_generate_new', questions['open_generate_new'])
    classification.migrate_question(apps, 'open_publication', questions['open_publication'])
    classification.migrate_question(apps, 'public_and_open', questions['public_and_open'])
    classification.migrate_question(apps, 'publishable', questions['publishable'])
    classification.verify_initial_questions(apps)

class Migration(migrations.Migration):

    dependencies = [
        ('data', '0011_auto_20190729_1409'),
    ]

    operations = [
        migrations.RunPython(prepare_questions, rollback_questions),
        migrations.RunPython(migrate_questions),
    ]
