# Generated by Django 3.1.13 on 2022-02-03 11:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import haven.projects.models
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('data', '0002_auto_20220203_1159'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassificationOpinion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tier', models.PositiveSmallIntegerField(choices=[(0, 'Tier 0'), (1, 'Tier 1'), (2, 'Tier 2'), (3, 'Tier 3'), (4, 'Tier 4')])),
                ('role', models.CharField(choices=[('referee', 'Referee'), ('project_manager', 'Project Manager'), ('investigator', 'Investigator'), ('researcher', 'Researcher'), ('data_provider_representative', 'Data Provider Representative')], help_text="The participant's role on this project at the time classification was made", max_length=50, validators=[haven.projects.models.validate_role])),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('role', models.CharField(choices=[('referee', 'Referee'), ('project_manager', 'Project Manager'), ('investigator', 'Investigator'), ('researcher', 'Researcher'), ('data_provider_representative', 'Data Provider Representative')], help_text="The participant's role on this project", max_length=50, validators=[haven.projects.models.validate_role])),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='PolicyGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=256, unique=True)),
                ('description', models.TextField()),
                ('archived', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkPackage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('new', 'New'), ('underway', 'Classification Underway'), ('classified', 'Classified')], default='new', max_length=32)),
                ('tier', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'Tier 0'), (1, 'Tier 1'), (2, 'Tier 2'), (3, 'Tier 3'), (4, 'Tier 4')], null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkPackageParticipant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='projects.participant')),
                ('work_package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_package_participants', to='projects.workpackage')),
            ],
            options={
                'abstract': False,
                'unique_together': {('participant', 'work_package')},
            },
        ),
        migrations.CreateModel(
            name='WorkPackageParticipantApproval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='data.dataset')),
                ('work_package_participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approvals', to='projects.workpackageparticipant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkPackageDataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='data.dataset')),
                ('opinion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='projects.classificationopinion')),
                ('work_package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_package_datasets', to='projects.workpackage')),
            ],
            options={
                'abstract': False,
                'unique_together': {('work_package', 'dataset')},
            },
        ),
        migrations.AddField(
            model_name='workpackage',
            name='datasets',
            field=models.ManyToManyField(blank=True, related_name='work_packages', through='projects.WorkPackageDataset', to='data.Dataset'),
        ),
        migrations.AddField(
            model_name='workpackage',
            name='participants',
            field=models.ManyToManyField(blank=True, related_name='work_packages', through='projects.WorkPackageParticipant', to='projects.Participant'),
        ),
        migrations.AddField(
            model_name='workpackage',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_packages', to='projects.project'),
        ),
        migrations.CreateModel(
            name='ProjectDataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='data.dataset')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_datasets', to='projects.project')),
                ('representative', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='project',
            name='datasets',
            field=models.ManyToManyField(blank=True, related_name='projects', through='projects.ProjectDataset', to='data.Dataset'),
        ),
        migrations.AddField(
            model_name='project',
            name='programmes',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.CreateModel(
            name='PolicyAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tier', models.PositiveSmallIntegerField(choices=[(0, 'Tier 0'), (1, 'Tier 1'), (2, 'Tier 2'), (3, 'Tier 3'), (4, 'Tier 4')])),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='projects.policy')),
            ],
        ),
        migrations.AddField(
            model_name='policy',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='projects.policygroup'),
        ),
        migrations.AddField(
            model_name='participant',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='projects.project'),
        ),
        migrations.AddField(
            model_name='participant',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ClassificationOpinionQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.SmallIntegerField()),
                ('question_version', models.IntegerField()),
                ('answer', models.BooleanField()),
                ('opinion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='projects.classificationopinion')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='data.classificationquestion')),
            ],
        ),
        migrations.AddField(
            model_name='classificationopinion',
            name='work_package',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classifications', to='projects.workpackage'),
        ),
        migrations.AlterUniqueTogether(
            name='participant',
            unique_together={('user', 'project')},
        ),
        migrations.AlterUniqueTogether(
            name='classificationopinion',
            unique_together={('created_by', 'work_package')},
        ),
    ]
