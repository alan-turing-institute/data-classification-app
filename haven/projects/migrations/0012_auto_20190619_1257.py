# Generated by Django 2.1 on 2019-06-19 12:57

import logging
from django.db import migrations, models
import haven.projects.models


def set_role(apps, schema_editor):
    ClassificationOpinion = apps.get_model('projects', 'ClassificationOpinion')
    Participant = apps.get_model('projects', 'Participant')
    for o in ClassificationOpinion.objects.all():
        try:
            p = o.user.participant_set.get(project=o.project)
            o.role = p.role
            o.save()
        except Participant.DoesNotExist:
            logging.debug('{} not participant on {}'.format(o.user, o.project))


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0011_rename_research_manager'),
    ]

    operations = [
        migrations.AddField(
            model_name='classificationopinion',
            name='role',
            field=models.CharField(choices=[('referee', 'Referee'), ('project_manager', 'Project Manager'), ('investigator', 'Investigator'), ('researcher', 'Researcher'), ('data_provider_representative', 'Data Provider Representative')], default='researcher', help_text="The participant's role on this project at the time classification was made", max_length=50, validators=[haven.projects.models.validate_role]),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='participant',
            name='role',
            field=models.CharField(choices=[('referee', 'Referee'), ('project_manager', 'Project Manager'), ('investigator', 'Investigator'), ('researcher', 'Researcher'), ('data_provider_representative', 'Data Provider Representative')], help_text="The participant's role on this project", max_length=50, validators=[haven.projects.models.validate_role]),
        ),
        migrations.RunPython(set_role, migrations.RunPython.noop),
    ]
